# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

variables:
- group: EnglishWordGroup

trigger:
- none

stages:
- stage: CreateAzureResources
  jobs:
  - job: CreateAzureResources
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Visual Studio Professional Subscription(0d01fa01-e307-4b38-b278-cca4bd1ec828)'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # create a resource group
          az group create -l $(GROUPLOCATION) -n $(RESOURCEGROUPNAME)

          #create and configure an Azure SQL server and Azure SQL database
          az sql server create -l $(GROUPLOCATION) -g $(RESOURCEGROUPNAME) -n $(SQLSRVNAME) -u $(SQLUSERNAME) -p $(SQLPASSWORD)

          # create and configure an Azure App Service plan and an Azure web app
          az appservice plan create -g $(RESOURCEGROUPNAME) -n $(APIPLANNAME) --l $(APILOCATION) --sku FREE
          az webapp create -g $(RESOURCEGROUPNAME) -p $(APIPLANNAME) -n $(APIAPPNAME)

- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'windows-latest'
    
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    - task: FileTransform@1
      displayName: 'File transformation: appsettings.json'
      inputs:
        folderPath: '$(Build.ArtifactStagingDirectory)/PublicApi'
        fileType: 'json'
        targetFiles: |
          **/appsettings.Development.json
          **/appsettings.json
    
    - task: AzureCLI@2
      inputs:
          azureSubscription: 'Visual Studio Professional Subscription(0d01fa01-e307-4b38-b278-cca4bd1ec828)'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            # create keys in webapps
            $settings = 
              "ASPNETCORE_ENVIRONMENT=Development"
            
            az webapp config appsettings set -g $(RESOURCEGROUPNAME) -n $(APIAPPNAME) --settings $settings

            az webapp config connection-string set -g $(RESOURCEGROUPNAME) -n $(APIAPPNAME) -t SQLAzure --settings CatalogConnection='Server=tcp:$(SQLSRVNAME).database.windows.net,1433;Initial Catalog=$(DBNAME);Persist Security Info=False;User ID=$(USERNAME);Password=$(PASSWORD);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
    
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Visual Studio Professional Subscription(0d01fa01-e307-4b38-b278-cca4bd1ec828)'
        appType: 'webApp'
        appName: '$(APIAPPNAME)'
        package: '$(Build.ArtifactStagingDirectory)'
